using System;
using System.Collections.Generic;
using System.Text;

namespace Framework.Web
{
    public static class WebFormApplicationMetaContentTypeList
    {
        static WebFormApplicationMetaContentTypeList()
        {
            m_Mapping = new Dictionary<string, string>();
            m_Mapping.Add("ez", "application/andrew-inset");
            m_Mapping.Add(".ez", "application/andrew-inset");
            m_Mapping.Add("hqx", "application/mac-binhex40");
            m_Mapping.Add(".hqx", "application/mac-binhex40");
            m_Mapping.Add("cpt", "application/mac-compactpro");
            m_Mapping.Add(".cpt", "application/mac-compactpro");
            m_Mapping.Add("doc", "application/msword");
            m_Mapping.Add(".doc", "application/msword");
            m_Mapping.Add("bin", "application/octet-stream");
            m_Mapping.Add(".bin", "application/octet-stream");
            m_Mapping.Add("dms", "application/octet-stream");
            m_Mapping.Add(".dms", "application/octet-stream");
            m_Mapping.Add("lha", "application/octet-stream");
            m_Mapping.Add(".lha", "application/octet-stream");
            m_Mapping.Add("lzh", "application/octet-stream");
            m_Mapping.Add(".lzh", "application/octet-stream");
            m_Mapping.Add("exe", "application/octet-stream");
            m_Mapping.Add(".exe", "application/octet-stream");
            m_Mapping.Add("class", "application/octet-stream");
            m_Mapping.Add(".class", "application/octet-stream");
            m_Mapping.Add("oda", "application/oda");
            m_Mapping.Add(".oda", "application/oda");
            m_Mapping.Add("pdf", "application/pdf");
            m_Mapping.Add(".pdf", "application/pdf");
            m_Mapping.Add("ai", "application/postscript");
            m_Mapping.Add(".ai", "application/postscript");
            m_Mapping.Add("eps", "application/postscript");
            m_Mapping.Add(".eps", "application/postscript");
            m_Mapping.Add("ps", "application/postscript");
            m_Mapping.Add(".ps", "application/postscript");
            m_Mapping.Add("rtf", "application/rtf");
            m_Mapping.Add(".rtf", "application/rtf");
            m_Mapping.Add("smi", "application/smil");
            m_Mapping.Add(".smi", "application/smil");
            m_Mapping.Add("smil", "application/smil");
            m_Mapping.Add(".smil", "application/smil");
            m_Mapping.Add("mif", "application/vnd.mif");
            m_Mapping.Add(".mif", "application/vnd.mif");
            m_Mapping.Add("xls", "application/vnd.ms-excel");
            m_Mapping.Add(".xls", "application/vnd.ms-excel");
            m_Mapping.Add("ppt", "application/vnd.ms-powerpoint");
            m_Mapping.Add(".ppt", "application/vnd.ms-powerpoint");
            m_Mapping.Add("bcpio", "application/x-bcpio");
            m_Mapping.Add(".bcpio", "application/x-bcpio");
            m_Mapping.Add("vcd", "application/x-cdlink");
            m_Mapping.Add(".vcd", "application/x-cdlink");
            m_Mapping.Add("pgn", "application/x-chess-pgn");
            m_Mapping.Add(".pgn", "application/x-chess-pgn");
            m_Mapping.Add("cpio", "application/x-cpio");
            m_Mapping.Add(".cpio", "application/x-cpio");
            m_Mapping.Add("csh", "application/x-csh");
            m_Mapping.Add(".csh", "application/x-csh");
            m_Mapping.Add("dcr", "application/x-director");
            m_Mapping.Add(".dcr", "application/x-director");
            m_Mapping.Add("dir", "application/x-director");
            m_Mapping.Add(".dir", "application/x-director");
            m_Mapping.Add("dxr", "application/x-director");
            m_Mapping.Add(".dxr", "application/x-director");
            m_Mapping.Add("dvi", "application/x-dvi");
            m_Mapping.Add(".dvi", "application/x-dvi");
            m_Mapping.Add("spl", "application/x-futuresplash");
            m_Mapping.Add(".spl", "application/x-futuresplash");
            m_Mapping.Add("gtar", "application/x-gtar");
            m_Mapping.Add(".gtar", "application/x-gtar");
            m_Mapping.Add("hdf", "application/x-hdf");
            m_Mapping.Add(".hdf", "application/x-hdf");
            m_Mapping.Add("js", "application/x-javascript");
            m_Mapping.Add(".js", "application/x-javascript");
            m_Mapping.Add("skp", "application/x-koan");
            m_Mapping.Add(".skp", "application/x-koan");
            m_Mapping.Add("skd", "application/x-koan");
            m_Mapping.Add(".skd", "application/x-koan");
            m_Mapping.Add("skt", "application/x-koan");
            m_Mapping.Add(".skt", "application/x-koan");
            m_Mapping.Add("skm", "application/x-koan");
            m_Mapping.Add(".skm", "application/x-koan");
            m_Mapping.Add("latex", "application/x-latex");
            m_Mapping.Add(".latex", "application/x-latex");
            m_Mapping.Add("nc", "application/x-netcdf");
            m_Mapping.Add(".nc", "application/x-netcdf");
            m_Mapping.Add("cdf", "application/x-netcdf");
            m_Mapping.Add(".cdf", "application/x-netcdf");
            m_Mapping.Add("sh", "application/x-sh");
            m_Mapping.Add(".sh", "application/x-sh");
            m_Mapping.Add("shar", "application/x-shar");
            m_Mapping.Add(".shar", "application/x-shar");
            m_Mapping.Add("swf", "application/x-shockwave-flash");
            m_Mapping.Add(".swf", "application/x-shockwave-flash");
            m_Mapping.Add("sit", "application/x-stuffit");
            m_Mapping.Add(".sit", "application/x-stuffit");
            m_Mapping.Add("sv4cpio", "application/x-sv4cpio");
            m_Mapping.Add(".sv4cpio", "application/x-sv4cpio");
            m_Mapping.Add("sv4crc", "application/x-sv4crc");
            m_Mapping.Add(".sv4crc", "application/x-sv4crc");
            m_Mapping.Add("tar", "application/x-tar");
            m_Mapping.Add(".tar", "application/x-tar");
            m_Mapping.Add("tcl", "application/x-tcl");
            m_Mapping.Add(".tcl", "application/x-tcl");
            m_Mapping.Add("tex", "application/x-tex");
            m_Mapping.Add(".tex", "application/x-tex");
            m_Mapping.Add("texinfo", "application/x-texinfo");
            m_Mapping.Add(".texinfo", "application/x-texinfo");
            m_Mapping.Add("texi", "application/x-texinfo");
            m_Mapping.Add(".texi", "application/x-texinfo");
            m_Mapping.Add("t", "application/x-troff");
            m_Mapping.Add(".t", "application/x-troff");
            m_Mapping.Add("tr", "application/x-troff");
            m_Mapping.Add(".tr", "application/x-troff");
            m_Mapping.Add("roff", "application/x-troff");
            m_Mapping.Add(".roff", "application/x-troff");
            m_Mapping.Add("man", "application/x-troff-man");
            m_Mapping.Add(".man", "application/x-troff-man");
            m_Mapping.Add("me", "application/x-troff-me");
            m_Mapping.Add(".me", "application/x-troff-me");
            m_Mapping.Add("ms", "application/x-troff-ms");
            m_Mapping.Add(".ms", "application/x-troff-ms");
            m_Mapping.Add("ustar", "application/x-ustar");
            m_Mapping.Add(".ustar", "application/x-ustar");
            m_Mapping.Add("src", "application/x-wais-source");
            m_Mapping.Add(".src", "application/x-wais-source");
            m_Mapping.Add("zip", "application/zip");
            m_Mapping.Add(".zip", "application/zip");
            m_Mapping.Add("au", "audio/basic");
            m_Mapping.Add(".au", "audio/basic");
            m_Mapping.Add("snd", "audio/basic");
            m_Mapping.Add(".snd", "audio/basic");
            m_Mapping.Add("mid", "audio/midi");
            m_Mapping.Add(".mid", "audio/midi");
            m_Mapping.Add("midi", "audio/midi");
            m_Mapping.Add(".midi", "audio/midi");
            m_Mapping.Add("kar", "audio/midi");
            m_Mapping.Add(".kar", "audio/midi");
            m_Mapping.Add("mpga", "audio/mpeg");
            m_Mapping.Add(".mpga", "audio/mpeg");
            m_Mapping.Add("mp2", "audio/mpeg");
            m_Mapping.Add(".mp2", "audio/mpeg");
            m_Mapping.Add("mp3", "audio/mpeg");
            m_Mapping.Add(".mp3", "audio/mpeg");
            m_Mapping.Add("aif", "audio/x-aiff");
            m_Mapping.Add(".aif", "audio/x-aiff");
            m_Mapping.Add("aiff", "audio/x-aiff");
            m_Mapping.Add(".aiff", "audio/x-aiff");
            m_Mapping.Add("aifc", "audio/x-aiff");
            m_Mapping.Add(".aifc", "audio/x-aiff");
            m_Mapping.Add("ram", "audio/x-pn-realaudio");
            m_Mapping.Add(".ram", "audio/x-pn-realaudio");
            m_Mapping.Add("rm", "audio/x-pn-realaudio");
            m_Mapping.Add(".rm", "audio/x-pn-realaudio");
            m_Mapping.Add("rpm", "audio/x-pn-realaudio-plugin");
            m_Mapping.Add(".rpm", "audio/x-pn-realaudio-plugin");
            m_Mapping.Add("ra", "audio/x-realaudio");
            m_Mapping.Add(".ra", "audio/x-realaudio");
            m_Mapping.Add("wav", "audio/x-wav");
            m_Mapping.Add(".wav", "audio/x-wav");
            m_Mapping.Add("pdb", "chemical/x-pdb");
            m_Mapping.Add(".pdb", "chemical/x-pdb");
            m_Mapping.Add("xyz", "chemical/x-pdb");
            m_Mapping.Add(".xyz", "chemical/x-pdb");
            m_Mapping.Add("bmp", "image/bmp");
            m_Mapping.Add(".bmp", "image/bmp");
            m_Mapping.Add("gif", "image/gif");
            m_Mapping.Add(".gif", "image/gif");
            m_Mapping.Add("ief", "image/ief");
            m_Mapping.Add(".ief", "image/ief");
            m_Mapping.Add("jpeg", "image/jpeg");
            m_Mapping.Add(".jpeg", "image/jpeg");
            m_Mapping.Add("jpg", "image/jpeg");
            m_Mapping.Add(".jpg", "image/jpeg");
            m_Mapping.Add("jpe", "image/jpeg");
            m_Mapping.Add(".jpe", "image/jpeg");
            m_Mapping.Add("png", "image/png");
            m_Mapping.Add(".png", "image/png");
            m_Mapping.Add("tiff", "image/tiff");
            m_Mapping.Add(".tiff", "image/tiff");
            m_Mapping.Add("tif", "image/tiff");
            m_Mapping.Add(".tif", "image/tiff");
            m_Mapping.Add("ras", "image/x-cmu-raster");
            m_Mapping.Add(".ras", "image/x-cmu-raster");
            m_Mapping.Add("pnm", "image/x-portable-anymap");
            m_Mapping.Add(".pnm", "image/x-portable-anymap");
            m_Mapping.Add("pbm", "image/x-portable-bitmap");
            m_Mapping.Add(".pbm", "image/x-portable-bitmap");
            m_Mapping.Add("pgm", "image/x-portable-graymap");
            m_Mapping.Add(".pgm", "image/x-portable-graymap");
            m_Mapping.Add("ppm", "image/x-portable-pixmap");
            m_Mapping.Add(".ppm", "image/x-portable-pixmap");
            m_Mapping.Add("rgb", "image/x-rgb");
            m_Mapping.Add(".rgb", "image/x-rgb");
            m_Mapping.Add("xbm", "image/x-xbitmap");
            m_Mapping.Add(".xbm", "image/x-xbitmap");
            m_Mapping.Add("xpm", "image/x-xpixmap");
            m_Mapping.Add(".xpm", "image/x-xpixmap");
            m_Mapping.Add("xwd", "image/x-xwindowdump");
            m_Mapping.Add(".xwd", "image/x-xwindowdump");
            m_Mapping.Add("igs", "model/iges");
            m_Mapping.Add(".igs", "model/iges");
            m_Mapping.Add("iges", "model/iges");
            m_Mapping.Add(".iges", "model/iges");
            m_Mapping.Add("msh", "model/mesh");
            m_Mapping.Add(".msh", "model/mesh");
            m_Mapping.Add("mesh", "model/mesh");
            m_Mapping.Add(".mesh", "model/mesh");
            m_Mapping.Add("silo", "model/mesh");
            m_Mapping.Add(".silo", "model/mesh");
            m_Mapping.Add("wrl", "model/vrml");
            m_Mapping.Add(".wrl", "model/vrml");
            m_Mapping.Add("vrml", "model/vrml");
            m_Mapping.Add(".vrml", "model/vrml");
            m_Mapping.Add("css", "text/css");
            m_Mapping.Add(".css", "text/css");
            m_Mapping.Add("html", "text/html");
            m_Mapping.Add(".html", "text/html");
            m_Mapping.Add("htm", "text/html");
            m_Mapping.Add(".htm", "text/html");
            m_Mapping.Add("asc", "text/plain");
            m_Mapping.Add(".asc", "text/plain");
            m_Mapping.Add("txt", "text/plain");
            m_Mapping.Add(".txt", "text/plain");
            m_Mapping.Add("rtx", "text/richtext");
            m_Mapping.Add(".rtx", "text/richtext");
            //m_Mapping.Add("rtf", "text/rtf");
            //m_Mapping.Add(".rtf", "text/rtf");
            m_Mapping.Add("sgml", "text/sgml");
            m_Mapping.Add(".sgml", "text/sgml");
            m_Mapping.Add("sgm", "text/sgml");
            m_Mapping.Add(".sgm", "text/sgml");
            m_Mapping.Add("tsv", "text/tab-separated-values");
            m_Mapping.Add(".tsv", "text/tab-separated-values");
            m_Mapping.Add("etx", "text/x-setext");
            m_Mapping.Add(".etx", "text/x-setext");
            m_Mapping.Add("xml", "text/xml");
            m_Mapping.Add(".xml", "text/xml");
            m_Mapping.Add("mpeg", "video/mpeg");
            m_Mapping.Add(".mpeg", "video/mpeg");
            m_Mapping.Add("mpg", "video/mpeg");
            m_Mapping.Add(".mpg", "video/mpeg");
            m_Mapping.Add("mpe", "video/mpeg");
            m_Mapping.Add(".mpe", "video/mpeg");
            m_Mapping.Add("qt", "video/quicktime");
            m_Mapping.Add(".qt", "video/quicktime");
            m_Mapping.Add("mov", "video/quicktime");
            m_Mapping.Add(".mov", "video/quicktime");
            m_Mapping.Add("avi", "video/x-msvideo");
            m_Mapping.Add(".avi", "video/x-msvideo");
            m_Mapping.Add("movie", "video/x-sgi-movie");
            m_Mapping.Add(".movie", "video/x-sgi-movie");
            m_Mapping.Add("ice", "x-conference/x-cooltalk");
            m_Mapping.Add(".ice", "x-conference/x-cooltalk");

            //m_Mapping.Add(".doc", "application/msword");
            //m_Mapping.Add("doc", "application/msword");
            //m_Mapping.Add(".jpg", "image/jpeg");
            //m_Mapping.Add("jpg", "image/jpeg");
            //m_Mapping.Add(".jpeg", "image/jpeg");
            //m_Mapping.Add("jpeg", "image/jpeg");
            //m_Mapping.Add(".jpe", "image/jpeg");
            //m_Mapping.Add("jpe", "image/jpeg");
            //m_Mapping.Add(".gif", "image/gif");
            //m_Mapping.Add("gif", "image/gif");
            //m_Mapping.Add(".tiff", "image/tiff");
            //m_Mapping.Add("tiff", "image/tiff");
            //m_Mapping.Add(".tif", "image/tiff");
            //m_Mapping.Add("tif", "image/tiff");
            //m_Mapping.Add(".bmp", "image/x-ms-bmp");
            //m_Mapping.Add("bmp", "image/x-ms-bmp");
        } 

        private static Dictionary<string, string> m_Mapping;
        /// <summary>
        /// key is the extension,
        /// value is the meta content type
        /// </summary>
        public static Dictionary<string, string> Mapping
        {
            get { return m_Mapping; }
            set { m_Mapping = value; }
        }
    }
}