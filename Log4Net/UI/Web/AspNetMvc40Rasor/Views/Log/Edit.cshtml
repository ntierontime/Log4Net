@using UrlStringsAlias = Log4Net.AspNetMvc40Rasor.Helpers.UrlStrings;
@model Log4Net.AspNetMvc40ViewModel.LogItemVM
<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2>@Model.ContentData.Title.</h2>
                <h4>@Model.ContentData.Summary</h4>
            </div>
@if (Model.StatusOfResult != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK && Model.StatusOfResult != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.UIProcessReady)
{
            <div class="panel-body">
                <div class="text-danger">@Model.StatusMessageOfResult</div>
            </div>
}
@using (Html.BeginForm(UrlStringsAlias.ActionName_Log_Edit, UrlStringsAlias.ControllerName_Log, FormMethod.Post, new { @class= "form" })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Id, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.Id)
                        </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Date, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Item.Date, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Item.Date, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Thread, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Item.Thread, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Item.Thread, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Level, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Item.Level, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Item.Level, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Logger, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Item.Logger, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Item.Logger, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Message, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Item.Message, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Item.Message, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item.Exception, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Item.Exception, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Item.Exception, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="panel-footer nopadding">
                <div class="btn-group btn-group-justified" role="group" aria-label="...">
                    <div class="btn-group">
                        <button class="btn btn-primary" role="button" type="submit">
                            <span class="glyphicon glyphicon-ok-sign"></span>
                            <span class="submit-text hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Save</span>
                        </button>
                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action(UrlStringsAlias.ActionName_Log_Edit, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.Item.Id })" class="btn btn-default" role="button" type="button">
                            <span class="glyphicon glyphicon-refresh"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Refresh</span>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action(UrlStringsAlias.ActionName_Log_Index)" class="btn btn-default" role="button" type="button">
                            <span class="glyphicon glyphicon-ban-circle"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Back</span>
                        </a>
                    </div>
                </div>
            </div>
}
        </div>
    </div>
</div>
@section Scripts {
   <script type="text/javascript">
        $(document).ready($(function() {
            $('input[name="Item.Date"]').datepicker({
                autoclose: true,
                beforeShowDay: $.noop,
                calendarWeeks: false,
                clearBtn: false,
                daysOfWeekDisabled: [],
                endDate: Infinity,
                forceParse: true,
                format: 'dd/mm/yyyy',
                keyboardNavigation: true,
                language: 'en',
                minViewMode: 0,
                orientation: 'auto',
                rtl: false,
                startDate: -Infinity,
                startView: 2,
                todayBtn: false,
                todayHighlight: false,
                weekStart: 0
            });
        }));
    </script>
}
